name: Release CI Docker

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/release-ci-docker.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/release-ci-docker.yml'

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      date_sha: ${{ steps.generate_tag.outputs.date_sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate version tag
        id: generate_tag
        run: |
          DATE_SHA=$(date +'%Y%m%d')-$(git rev-parse --short HEAD)
          echo "date_sha=${DATE_SHA}" >> $GITHUB_OUTPUT
          echo "Generated version tag: ${DATE_SHA}"

  build:
    runs-on: ubuntu-latest
    needs: generate-tag
    strategy:
      matrix:
        cuda: [cu126, cu128, cu129, cu130]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: flashinfer
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.cuda }} ${{ matrix.arch }} image
        uses: docker/build-push-action@v5
        with:
          context: docker
          file: docker/Dockerfile.${{ matrix.cuda }}
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            flashinfer/flashinfer-ci-${{ matrix.cuda }}:${{ matrix.arch }}-${{ needs.generate-tag.outputs.date_sha }}
          cache-from: type=registry,ref=flashinfer/flashinfer-ci-${{ matrix.cuda }}:buildcache-${{ matrix.arch }}
          cache-to: ${{ github.event_name != 'pull_request' && format('type=registry,ref=flashinfer/flashinfer-ci-{0}:buildcache-{1},mode=max', matrix.cuda, matrix.arch) || '' }}
          provenance: false
          sbom: false

  create-manifests:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [generate-tag, build]
    strategy:
      matrix:
        cuda: [cu126, cu128, cu129, cu130]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: flashinfer
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push multi-arch manifest for ${{ matrix.cuda }}
        env:
          DATE_SHA: ${{ needs.generate-tag.outputs.date_sha }}
        run: |
          docker buildx imagetools create \
            -t flashinfer/flashinfer-ci-${{ matrix.cuda }}:${DATE_SHA} \
            -t flashinfer/flashinfer-ci-${{ matrix.cuda }}:latest \
            flashinfer/flashinfer-ci-${{ matrix.cuda }}:amd64-${DATE_SHA} \
            flashinfer/flashinfer-ci-${{ matrix.cuda }}:arm64-${DATE_SHA}
